version: '3.6'
services:
  postgres:
    image: postgres:15
    container_name: nimbora-indexer-postgres_${BRANCH}
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ${DATABASE_NAME}
    logging:
      driver: 'json-file'
      options:
        tag: '{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}'
        max-size: '50m'
        max-file: '100'

  graphql-engine:
    image: hasura/graphql-engine:v2.30.0
    container_name: nimbora-indexer-graphql-engine_${BRANCH}
    ports:
      - ${GRAPHQL_PORT}:${GRAPHQL_PORT}
    restart: always
    environment:
      HASURA_GRAPHQL_METADATA_DATABASE_URL: ${DATABASE_URL}/${DATABASE_NAME}
      PG_DATABASE_URL: ${DATABASE_URL}/${DATABASE_NAME}
      HASURA_GRAPHQL_ENABLE_CONSOLE: 'true'
      HASURA_GRAPHQL_DEV_MODE: 'true'
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: http-log, query-log
      HASURA_GRAPHQL_METADATA_DEFAULTS: '{"backend_configs":{"dataconnector":{"athena":{"uri":"http://data-connector-agent:8081/api/v1/athena"},"mariadb":{"uri":"http://data-connector-agent:8081/api/v1/mariadb"},"mysql8":{"uri":"http://data-connector-agent:8081/api/v1/mysql"},"oracle":{"uri":"http://data-connector-agent:8081/api/v1/oracle"},"snowflake":{"uri":"http://data-connector-agent:8081/api/v1/snowflake"}}}}'
    logging:
      driver: 'json-file'
      options:
        tag: '{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}'
        max-size: '50m'
        max-file: '100'
    depends_on:
      data-connector-agent:
        condition: service_healthy

  data-connector-agent:
    image: hasura/graphql-data-connector:v2.30.0
    container_name: nimbora-indexer-data-connector-agent_${BRANCH}
    restart: always
    environment:
      QUARKUS_LOG_LEVEL: ERROR # FATAL, ERROR, WARN, INFO, DEBUG, TRACE
      ## https://quarkus.io/guides/opentelemetry#configuration-reference
      QUARKUS_OPENTELEMETRY_ENABLED: 'false'
      ## QUARKUS_OPENTELEMETRY_TRACER_EXPORTER_OTLP_ENDPOINT: http://jaeger:4317
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8081/api/v1/athena/health']
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 5s
    logging:
      driver: 'json-file'
      options:
        tag: '{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}'
        max-size: '50m'
        max-file: '100'

  indexer:
    image: spaceshard/nimbora-yielddex-indexer:${BRANCH}
    container_name: nimbora-indexer_${BRANCH}
    restart: always
    environment:
      NETWORK: ${NETWORK}
      DATABASE_URL: ${DATABASE_URL}
      DATABASE_NAME: ${DATABASE_NAME}
      L2_ALCHEMY_RPC_URL: ${L2_ALCHEMY_RPC_URL}
      INDEXER_PORT: ${INDEXER_PORT}
      METRICS_PORT: ${METRICS_PORT}
      DATABASE_RESET: ${DATABASE_RESET}
      DATABASE_RESET_METADATA: ${DATABASE_RESET_METADATA}
    logging:
      driver: 'json-file'
      options:
        tag: '{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}'
        max-size: '50m'
        max-file: '100'
    ports:
      - '${METRICS_PORT}:${METRICS_PORT}'
    depends_on:
      - postgres
      - graphql-engine
      - data-connector-agent

volumes:
  db_data: